generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

enum Grade {
REGULAR
MID
PREMIUM
}

model Fuel {
  id Int @id @default(autoincrement())
  grade Grade
  gallons Decimal @db.Decimal(1,1)
  date DateTime
  mileage Int
  vehicle Vehicle @relation(fields: [vehicleId], references: [id])
  vehicleId Int
}



model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  vehicles Vehicle[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Vehicle {
  id      Int    @id @default(autoincrement())
  make    String
  model   String
  year    Int
  mileage Int
  fuels Fuel[]
  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String

}
